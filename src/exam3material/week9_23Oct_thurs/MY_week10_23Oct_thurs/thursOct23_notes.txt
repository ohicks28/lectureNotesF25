HW 7 due Tuesday, October 28

/////////////////////////////

Today: 
- finish predicate logic
- mathematical induction

/////////////////////////////

Skipping proofs of DeMorgan's laws for quantifers to move on to induction.

Those would be great practice for next exam -- the proof files are in week9_21Oct_tues

/////////////////////////////


Soundness and completeness of predicate logic.


Soundness: definition? everything that we can prove with our proof system is actually true

    propositional: yes

    predicate logic: yes

Completeness: definition? we can use our proof system to prove everytihng that is true

    propositional: yes

    predicate logic: not complete

///////////////////////////////////

Same argument might be VALID in one domain and INVALID in another

- deduction can only prove arguments that are valid in ANY domain
- we can't prove all valid arguments

Domain with integers with operations like +

All integers? 2 + 3 = ? 5


Subset (0,1,2,3,4) of integers. 2 + 3 = ? 0 
(if you cannot find the "correct number", wrap it to the beginning again)


////////////////////////////////////


Godel's Incompleteness Theorem.

Any consistent formal system where integer arithmetic is
carried out is incomplete -- there will be true statements
that cannot be proved.

(depends on domains/interpretations)

/////////////////////

////////////////////////////////////////

Example:

We want to prove that for any positive integer n:

    1 + 2 + ... + n = n*(n+1)/2


(Carl Gauss)


Try it out first.
    n = 1?

    n = 2?

    n = 3?


Have we proved it yet?



///////////////////////////////////////////

Mathematical induction.

Tool for proving some claim P(n) holds for all natural numbers n



The induction domino effect:

    ( P(1) ∧ ∀ k (P(k) → P(k+1)) ) → ∀ n P(n) 




What is this saying?
    P(1)? 

    ∀ k (P(k) → P(k+1))? 



Putting it all together:

( P(1) ∧ ∀ k (P(k) → P(k+1)) ) → ∀ n P(n) 



English translation?



////////////////////////////////////

Why are we doing this?

////////////////////////////////////

Revisit our example:

We want to prove that for any positive integer n:

    1 + 2 + ... + n = n*(n+1)/2




Proof by induction.



/////////////////////////////////

(in-class quiz)

/////////////////////////////////

Do you think induction can be used to prove properties for
    ALL integers?

must have a smallest value in the domain 

(doesn't have to be any specific set of numbers, you just must have a smallest value)

/////////////////////////////////

Induction template.

1) label base case. prove the claim is true for the smallest element in your domain

2) label the inductive step. "Assume the inductive hypothesis - that <insert claim> holds for some fixed k in <insert domain>"

3) try to prove for k + 1. "We must show that our claim holds for k + 1"

4) Summarize. "It follows by induction that <insert domain> holds for all <insert domain>"

/////////////////////////////////

Example: Prove that the sum of the first n odd numbers is n^2.

    (what is our domain?)


How can we express the sum of the first n odd numbers more formally?



So, what is our claim?



Proof by induction.


/////////////////////////////////

Example: Prove that 3^n - 1 is even for all positive integers n.


what does "even" mean? 
a number k is even if there exists and int a such that k = 2 * a


Proof by induction.

base case: we must prove that our claim hold for our smallest positive int, n = 1. 3^1 - 1 = 2
because 2 = 2*1, and 1 is an int, we know 2 is even

inductive step. we assume the inductive hypothesis -- that 3^k - 1 is even for some positive ints k.
we must show that 3^(k + 1) - 1 is even.

if 3^k - 1 is even, then there exists an int a 2a = 3^k - 1

//////////////////////////////////

Bad induction, example 1.

Use induction to prove that in any nonempty set of n horses, all horses are the same color.


//////////////////////////////////

Bad induction, example 1.


Use induction to prove that 8n+3 is even for all positive integers n.

(What happens when we skip the base case?)


////////////////////////////////////

Next time:
- more with induction
- begin survey of proof techniques